#!/bin/bash
#
# Usage: $0 <directory_to_backup> <duplicity backup arguments>
#
# Same as duplicity, but records ACLs, and xattrs, and is intelligent about not
# storing hard-linked files.
#
# Stores the extra metadata in .dupext directory in root of the backup.
#

set -e

cd "$1"
shift

# Delete the .dupext directory on exit
trap "rm -rf .dupext" EXIT
mkdir -p .dupext

# copy the restore script
RESTORE_SCRIPT=$(dirname $(readlink -f $0))/restore-all-links-and-metadata
cp "$RESTORE_SCRIPT" .dupext

#
# handle hard links
#

# Get a list of all non-directories with more than one hard link, and sort it by inode
find ! -type d -links +1 -printf '%i %n %P\0' | sort -n -z > .dupext/hardlinks.txtz

# Create an exclusion file for duplicity, for multiply hardlinked files
cat .dupext/hardlinks.txtz \
	| perl -e '$/="\0"; while(<>) { chomp; ($i, $l, $_) = /^(\d+) (\d+) (.*)/s; if($i==$i0) { print "./$_\0"; } $i0 = $i; }' \
	> .dupext/exclude.txtz

#
# store ACLs
#
getfacl -n -R . | awk 'BEGIN { RS=""; FS="\n"; } ! /^# file: .dupext.*/ { print $0"\n" }' >  .dupext/acl.txt

#
# store xattrs
#
getfattr -h -m . -d -R . | awk 'BEGIN { RS=""; FS="\n"; } ! /^# file: .dupext.*/ { print $0"\n" }' > .dupext/xattr.txt

# run duplicity, excluding the hardlinks
duplicity --null-separator --exclude-filelist .dupext/exclude.txtz . "$@"
