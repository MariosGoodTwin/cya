#!/bin/bash
#
# cya-client-new-backup <remote-cya-dropbox> <backup-name> <dir-to-backup>
#
# example: cya-client-new-backup drop-elenna@archive.local elenna-home /home
#

set -e

#info() { [[ ! -z "$VERBOSE" ]] && echo "$@" || : ; }
info() { [[ -z "$QUIET" ]] && echo "$@" || : ; }
die() { echo >&2 "$@"; exit -1; }

# Check arguments
[[ $# -eq 3 ]] || { die "usage: $0 <remote-cya-dropbox> <backup-name> <dir-to-backup>"; }

# Find where we're installed
CYA_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"

# Defaults
RUNDIR=/var/run
LOGFILE=/var/log/cya.log

# Allow for overrides
CONF=/etc/cya
[[ -f /etc/cya/server.conf ]] && . /etc/cya/server.conf

# Destination dir on the archive host
SOURCEDIR="$3"
BACKUPNAME="$2"
CONFDIR="$CONF/sets/$2"
DESTHOST="$1"

DESTDIR="$BACKUPNAME"

# Refuse to run if $CONFDIR exists
[[ -e "$CONFDIR" ]] && { die "$CONFDIR exists; remove it and try again."; }

# Refuse to run if $HOME is not set
[[ -z "$HOME" ]] && { die "\$HOME environmental variable is not set; please set it and try again."; }

# Does duplicity exist?
hash duplicity 2>/dev/null || { die "Duplicity not found; please install it. aborting"; }

# Is the version greater than minimum?
DUPMINVER=0.6.20
DUPVER="$(duplicity --version | cut -d' ' -f 2)"
[[ $(echo -e "$DUPMINVER\n$DUPVER" | sort -V | head -n 1) == "$DUPMINVER" ]] || { die "duplicity not recent enough; need $DUPMINVER or higher, you have $DUPVER."; }

CONFFILE="$CONFDIR/config"
SSHKEY="$CONFDIR/id_rsa"

#echo $CONFFILE $SSHKEY

mkdir -p "$CONFDIR"
chmod 700 "$CONFDIR"

info "Creating $CONFFILE"
sed "\
	s|__ENCKEY__|$(openssl rand -base64 32)|g; \
	s|__DESTHOST__|$(printf '%-50s' \"$DESTHOST\")|g; \
	s|__SOURCEDIR__|$(printf '%-50s' \"$SOURCEDIR\")|g; \
	s|__DESTDIR__|$(printf '%-50s' \"$DESTDIR\")|g; \
" templates/config.sample > "$CONFFILE"
chmod 600 "$CONFFILE"

. "$CONFFILE"

# echo $SOURCEDIR, $BACKUP_ENCRYPTION_KEY, $EXCLUDE, $DUPLICITY_CMD, $DESTHOST, $DESTDIR, $SSHKEY

DH=(${DESTHOST//@/ })
DH="${DH[@]:(-1)}"
if ! ssh-keygen -F "$DH" >/dev/null 2>&1; then
	info "Adding $DH host key to known_hosts..."
	mkdir -p ~/.ssh
	chmod 700 ~/.ssh
	ssh-keyscan "$DH" >> ~/.ssh/known_hosts 2>/dev/null
fi

#
# Generate SSH keys
#

echo -n "Generating SSH key in $SSHKEY..."
KEYDIR=$(dirname "$SSHKEY")
mkdir -p "$KEYDIR"
rm -f "$SSHKEY" "$SSHKEY.pub"
ssh-keygen -b 2048 -t rsa -f "$SSHKEY" -q -N ""
echo " done."

#
# Install the key with the dropbox user
#

echo 'When prompted, type in the passphrase generated by `cya-server new-backup`:'
cat "$SSHKEY.pub" | ssh "$DESTHOST" "cat > $DESTDIR/key.pub && mkdir -p .ssh && chmod 700 .ssh && cat $DESTDIR/key.pub >> .ssh/authorized_keys && chmod 600 .ssh/authorized_keys"

#
#
#
SSH="ssh -o IdentitiesOnly=yes -i $SSHKEY"

info -n "Checking that we can log in with our key... "
$SSH "$DESTHOST" ":"
info "success."


info -n "Checking the dropbox directory exists... "
OK=$($SSH "$DESTHOST" "test -d \"$DESTDIR\" && echo Y || echo N")
[[ $OK == "Y" ]] && info "it does." || { info " failed."; die -n "\nerror: looks like $DESTHOST:$DESTDIR doesn't exist.\nrun cya-add-client on the backup server before setting up a client here."; }

cat <<-EOF

	Backupset configuration created.
	Backup encryption passphrase (!! STORE IT IN A SAFE PLACE !!):
	
	  ================================================
	    $BACKUP_ENCRYPTION_KEY
	  ================================================

	Information:

	  * Config dir:      $CONFDIR
	  * Source:          $SOURCEDIR
	  * Destination:     $DESTHOST:$DESTDIR
	  * Encryption key:  $BACKUP_ENCRYPTION_KEY

	Next steps:

	  * Edit $CONFFILE to adjust the EXCLUDES directive. cya-client-backup
	    will refuse to run until you do.

	  * Force first backup as:

	      $CYA_DIR/bin/cya-client-backup $CONFDIR
EOF
