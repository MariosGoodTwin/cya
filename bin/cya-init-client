#!/bin/bash

set -e

# Destination dir on the archive host
DESTDIR=$(hostname)

# Find where we're installed
CYA_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"

# Refuse to run if $HOME is not set
[[ -z $HOME ]] && { echo "\$HOME environmental variable is not set; please set it and try again."; exit -1; }

# Does duplicity exist?
hash duplicity 2>/dev/null || { echo >&2 "Duplicity not found; please install it. Aborting"; exit -1; }

# Is the version greater than minimum?
DUPMINVER=0.6.20
DUPVER="$(duplicity --version | cut -d' ' -f 2)"
[[ $(echo -e "$DUPMINVER\n$DUPVER" | sort -V | head -n 1) == "$DUPMINVER" ]] || { echo >&2 "Duplicity not recent enough; need $DUPMINVER or higher, you have $DUPVER."; exit -1; }

echo "Creating /etc/cya/cya.conf"
mkdir -p /etc/cya
chmod 700 /etc/cya

cat templates/cya.conf.sample | sed "s|__ENCKEY__|$(openssl rand -base64 32)|g; s|__DESTDIR__|$(printf '%-50s' \"$DESTDIR\")|g;" > /etc/cya/cya.conf
chmod 600 /etc/cya/cya.conf
##${EDITOR:-vi} /etc/cya/cya.conf

. /etc/cya/cya.conf

# echo $SOURCEDIR, $BACKUP_ENCRYPTION_KEY, $EXCLUDE, $DUPLICITY_CMD, $DESTHOST, $DESTDIR, $SSHKEY

mkdir -p ~/.ssh
chmod 700 ~/.ssh

DH=(${DESTHOST//@/ })
DH="${DH[@]:(-1)}"
if ! ssh-keygen -F "$DH" >/dev/null 2>&1; then
	echo "Adding $DH host key to known_hosts..."
	ssh-keyscan "$DH" >> ~/.ssh/known_hosts 2>/dev/null
fi

if [[ ! -f "$SSHKEY" ]]; then
	echo "Generating SSH key in $SSHKEY..."
	KEYDIR=$(dirname "$SSHKEY")
	mkdir -p "$KEYDIR"
	chmod 700 "$KEYDIR"
	rm -f "$SSHKEY.*"
	ssh-keygen -b 2048 -t rsa -f "$SSHKEY" -q -N ""
else
	echo "Key exists in $SSHKEY, skipping generation..."
fi

SSH="ssh -o IdentitiesOnly=yes -i $SSHKEY"

echo -n "Creating backup directory $DESTHOST:$DESTDIR... "
ssh "$DESTHOST" "mkdir -p $DESTDIR"
echo "done."

if ! $SSH "$DESTHOST" "exit"; then
	echo "Adding the key to $DESTHOST:.ssh/authorized_keys ..."
	cat "$SSHKEY.pub" | ssh "$DESTHOST" "cat > $DESTDIR/key.pub && mkdir -p .ssh && chmod 700 .ssh && cat $DESTDIR/key.pub >> .ssh/authorized_keys && chmod 700 .ssh/authorized_keys"
fi
echo -n "Checking that we can log in with our key... "
$SSH "$DESTHOST" "echo success."

echo -n "Enabling backup for $DESTHOST:$DESTDIR... "
$SSH "$DESTHOST" "mkdir -p $DESTDIR/incoming/next && chmod 700 $DESTDIR"
echo "done."

COLLECTION_CADENCE=$($SSH "$DESTHOST" "test -f collection_cadence && cat collection_cadence || echo 'unknown'")

echo "Registering the backup job with Cron (/etc/cron.d/cya-backup)."
cat > /etc/cron.d/cya-backup <<-EOF
	# Your backup job should run ~15 minutes after the server runs collection."
	# Your server reports it runs collection every: $COLLECTION_CADENCE"
	# Make sure to take time zone differences into account, if any."
	45 5 * * * root HOME=$HOME $CYA_DIR/bin/cya-backup | tee -a $CYA_DIR/log/cya.backup.log 2>&1
EOF
echo "Done."
#${EDITOR:-vi} /etc/cron.d/cya-backup
